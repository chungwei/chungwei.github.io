<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on </title>
    <link>http://chungwei.github.io/categories/shell/</link>
    <description>Recent content in Shell on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 11 May 2016 10:49:46 +0800</lastBuildDate>
    <atom:link href="http://chungwei.github.io/categories/shell/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Expect 实现 Linux 远程登录</title>
      <link>http://chungwei.github.io/2016/05/11/shell-expect/</link>
      <pubDate>Wed, 11 May 2016 10:49:46 +0800</pubDate>
      
      <guid>http://chungwei.github.io/2016/05/11/shell-expect/</guid>
      <description>

&lt;h4 id=&#34;背景:594a8c577dddc6215feb74a35737f6bb&#34;&gt;背景&lt;/h4&gt;

&lt;p&gt;远程登录时工作中经常遇到的问题，之前的解决办法要么是老老实实手工输入密码，要么是两台机器建立
信任关系，但总感觉很麻烦，特别是机器多了，实在影响效率！&lt;/p&gt;

&lt;p&gt;最好的办法，是不需配置信任关系即可实现自动远程登录。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;实现:594a8c577dddc6215feb74a35737f6bb&#34;&gt;实现&lt;/h4&gt;

&lt;p&gt;使用 expect 即可实现，具体实现如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/expect

# 设置超时时间为 3 秒
set timeout 3

# 设置要登录的主机 IP 地址
set host 10.10.38.232

# 设置以什么名字的用户登录
set name root
# 设置用户名的登录密码
set password 111222333

#spawn 一个 ssh 登录进程
spawn  ssh $host -l $name

# 等待响应，第一次登录往往会提示是否永久保存 RSA 到本机的 know hosts 列表中；等到回答后，在提示输出密码；之后就直接提示输入密码
expect {
   &amp;quot;(yes/no)?&amp;quot; {
       send &amp;quot;yes\n&amp;quot;
       expect &amp;quot;password:&amp;quot;
       send &amp;quot;$pasword\n&amp;quot;
   }
   &amp;quot;password:&amp;quot; {
       send &amp;quot;$password\n&amp;quot;
   }
}

# 这里使用了 interact 命令，使执行完程序后，用户可以在 $host 终端进行交互操作。
interact
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;参考文献:594a8c577dddc6215feb74a35737f6bb&#34;&gt;参考文献&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ibm.com/developerworks/cn/aix/library/0909_jinjh_unixlogin/&#34;&gt;Unix/Linux 系统自动化管理: 远程登录篇&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>